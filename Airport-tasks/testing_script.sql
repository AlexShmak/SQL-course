-- -- Test 1: Check AIRCRAFT data
-- SELECT
-- 	*
-- FROM
-- 	AIRCRAFT;

-- -- Test 2: Check AIRPORT data
-- SELECT
-- 	*
-- FROM
-- 	AIRPORT;

-- -- Test 3: Check SERVICE_CLASSES_INFO data
-- SELECT
-- 	*
-- FROM
-- 	SERVICE_CLASSES_INFO;

-- -- Test 4: Check FLIGHT_SERVICE data
-- SELECT
-- 	*
-- FROM
-- 	FLIGHT_SERVICE;

-- -- Test 5: Check EMPLOYEE data
-- SELECT
-- 	*
-- FROM
-- 	EMPLOYEE;

-- -- Test 6: Check CUSTOMER data
-- SELECT
-- 	*
-- FROM
-- 	CUSTOMER;

-- -- Test 7: Check FLIGHT_BOOKINGS data
-- SELECT
-- 	*
-- FROM
-- 	FLIGHT_BOOKINGS;

-- -- Test 8: Check FLIGHT data
-- SELECT
-- 	*
-- FROM
-- 	FLIGHT;

-- -- Test 9: Check BOOKING data
-- SELECT
-- 	*
-- FROM
-- 	BOOKING;

-- -- Test 10: Check PASSENGER data
-- SELECT
-- 	*
-- FROM
-- 	PASSENGER;

-- -- Validation Queries for Relationships
-- -- Validate that FLIGHT references SERVICE_CLASSES_INFO correctly
-- SELECT
-- 	F.FLIGHT_NUMBER,
-- 	S.ECONOMY_CLASS_TOTAL_SEATS,
-- 	S.BUSINESS_CLASS_TOTAL_SEATS
-- FROM
-- 	FLIGHT F
-- 	JOIN SERVICE_CLASSES_INFO S ON F.SERVICE_CLASSES_INFO_ID = S.SERVICE_CLASSES_INFO_ID;

-- -- Validate that FLIGHT_SERVICE references AIRCRAFT correctly
-- SELECT
-- 	FS.FLIGHT_SERVICE_ID AS FLIGHT_SERVICE_ID,
-- 	A.MODEL,
-- 	A.CAPACITY
-- FROM
-- 	FLIGHT_SERVICE FS
-- 	JOIN AIRCRAFT A ON FS.AIRCRAFT_ID = A.AIRCRAFT_ID;

-- -- Validate that EMPLOYEE references FLIGHT_SERVICE correctly
-- SELECT
-- 	E.FIRST_NAME,
-- 	E.LAST_NAME,
-- 	FS.FLIGHT_SERVICE_ID AS FLIGHT_SERVICE_ID
-- FROM
-- 	EMPLOYEE E
-- 	JOIN FLIGHT_SERVICE FS ON E.FLIGHT_SERVICE_ID = FS.FLIGHT_SERVICE_ID;

-- -- Validate that BOOKING references CUSTOMER and FLIGHT correctly
-- SELECT
-- 	B.BOOKING_DATE_TIME,
-- 	C.FIRST_NAME AS CUSTOMER_NAME,
-- 	F.FLIGHT_NUMBER
-- FROM
-- 	BOOKING B
-- 	JOIN CUSTOMER C ON B.CUSTOMER_ID = C.CUSTOMER_ID
-- 	JOIN FLIGHT F ON B.FLIGHT_ID = F.FLIGHT_ID;

-- -- Validate that PASSENGER references BOOKING correctly
-- SELECT
-- 	P.FIRST_NAME AS PASSENGER_NAME,
-- 	B.BOOKING_DATE_TIME
-- FROM
-- 	PASSENGER P
-- 	JOIN BOOKING B ON P.BOOKING_ID = B.BOOKING_ID;

-- -- Test Reserved Seats Logic in BOOKING
-- -- Validate that reserved seats in BOOKING fall within the correct seat range in SERVICE_CLASSES_INFO
-- SELECT
-- 	B.RESERVED_SEATS,
-- 	S.ECONOMY_CLASS_TOTAL_SEATS + S.BUSINESS_CLASS_TOTAL_SEATS AS TOTAL_SEATS
-- FROM
-- 	BOOKING B
-- 	JOIN FLIGHT F ON B.FLIGHT_ID = F.FLIGHT_ID
-- 	JOIN SERVICE_CLASSES_INFO S ON F.SERVICE_CLASSES_INFO_ID = S.SERVICE_CLASSES_INFO_ID;
-- WHERE
-- 	NOT EXISTS (
-- 		SELECT
-- 			1
-- 		FROM
-- 			UNNEST(B.RESERVED_SEATS) AS SEAT
-- 		WHERE
-- 			SEAT BETWEEN 1 AND (
-- 				S.ECONOMY_CLASS_TOTAL_SEATS + S.BUSINESS_CLASS_TOTAL_SEATS
-- 			)
-- 	);

-- Test Economy and Business Class Seat Allocations
-- SELECT
-- 	F.FLIGHT_NUMBER,
-- 	S.ECONOMY_CLASS_TOTAL_SEATS,
-- 	S.BUSINESS_CLASS_TOTAL_SEATS,
-- 	B.RESERVED_SEATS
-- FROM
-- 	FLIGHT F
-- 	JOIN SERVICE_CLASSES_INFO S ON F.SERVICE_CLASSES_INFO_ID = S.SERVICE_CLASSES_INFO_ID
-- 	JOIN BOOKING B ON F.FLIGHT_ID = B.FLIGHT_ID;
