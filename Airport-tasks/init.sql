------------------------------------------------------------------------------------------------------------------------
-- Создание таблиц (с использованием проверок CHECK, UNIQUE, NOT NULL)
------------------------------------------------------------------------------------------------------------------------
CREATE TABLE AIRCRAFT
(
    AIRCRAFT_ID INTEGER                NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    MODEL       CHARACTER VARYING(100) NOT NULL,
    CAPACITY    INTEGER                NOT NULL CHECK (CAPACITY > 0)
);

CREATE TABLE AIRPORT
(
    AIRPORT_ID INTEGER                NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME       CHARACTER VARYING(100) NOT NULL,
    CITY       CHARACTER VARYING(100) NOT NULL,
    COUNTRY    CHARACTER VARYING(100) NOT NULL
);

CREATE TABLE CUSTOMER
(
    CUSTOMER_ID INTEGER               NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FIRST_NAME  CHARACTER VARYING(50) NOT NULL,
    LAST_NAME   CHARACTER VARYING(50) NOT NULL,
    EMAIL       CHARACTER VARYING(50) NOT NULL CHECK (EMAIL LIKE '%@%.%'),
    PHONE       CHARACTER VARYING(50) NOT NULL CHECK (LENGTH(PHONE) >= 10)
);

CREATE TABLE SERVICE_CLASSES_INFO
(
    SERVICE_CLASSES_INFO_ID     INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ECONOMY_CLASS_TOTAL_SEATS   INTEGER NOT NULL CHECK (ECONOMY_CLASS_TOTAL_SEATS > 0),
    BUSINESS_CLASS_TOTAL_SEATS  INTEGER NOT NULL CHECK (BUSINESS_CLASS_TOTAL_SEATS > 0),
    ECONOMY_CLASS_TICKET_PRICE  INTEGER NOT NULL CHECK (ECONOMY_CLASS_TICKET_PRICE > 0),
    BUSINESS_CLASS_TICKET_PRICE INTEGER NOT NULL CHECK (BUSINESS_CLASS_TICKET_PRICE > 0)
);

CREATE TABLE FLIGHT_SERVICE
(
    FLIGHT_SERVICE_ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    AIRCRAFT_ID       INTEGER NOT NULL REFERENCES AIRCRAFT (AIRCRAFT_ID)
);

CREATE TABLE FLIGHT_BOOKINGS
(
    FLIGHT_BOOKING_ID           INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ECONOMY_CLASS_SEATS_BOOKED  INTEGER DEFAULT 0 CHECK (ECONOMY_CLASS_SEATS_BOOKED >= 0),
    BUSINESS_CLASS_SEATS_BOOKED INTEGER DEFAULT 0 CHECK (BUSINESS_CLASS_SEATS_BOOKED >= 0)
);

CREATE TABLE FLIGHT
(
    FLIGHT_ID               INTEGER                     NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FLIGHT_NUMBER           CHARACTER VARYING(10)       NOT NULL UNIQUE,
    DEPARTURE_DATE          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    ARRIVAL_DATE            TIMESTAMP WITHOUT TIME ZONE NOT NULL CHECK (ARRIVAL_DATE > DEPARTURE_DATE),
    DEPARTURE_AIRPORT_ID    INTEGER                     NOT NULL REFERENCES AIRPORT (AIRPORT_ID),
    ARRIVAL_AIRPORT_ID      INTEGER                     NOT NULL REFERENCES AIRPORT (AIRPORT_ID) CHECK (ARRIVAL_AIRPORT_ID <> DEPARTURE_AIRPORT_ID),
    FLIGHT_SERVICE_ID       INTEGER                     NOT NULL REFERENCES FLIGHT_SERVICE (FLIGHT_SERVICE_ID),
    FLIGHT_BOOKING_ID       INTEGER                     NOT NULL REFERENCES FLIGHT_BOOKINGS (FLIGHT_BOOKING_ID),
    SERVICE_CLASSES_INFO_ID INTEGER                     NOT NULL REFERENCES SERVICE_CLASSES_INFO (SERVICE_CLASSES_INFO_ID)
);

CREATE TABLE BOOKING
(
    BOOKING_ID        INTEGER                     NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    BOOKING_DATE_TIME TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PAYMENT_METHOD    CHARACTER VARYING(20)       NOT NULL CHECK (
        PAYMENT_METHOD IN ('Credit Card', 'Debit Card', 'Cash')
        ),
    RESERVED_SEATS    INTEGER[]                   NOT NULL,
    CUSTOMER_ID       INTEGER                     NOT NULL REFERENCES CUSTOMER (CUSTOMER_ID),
    FLIGHT_ID         INTEGER                     NOT NULL REFERENCES FLIGHT (FLIGHT_ID)
);

CREATE TABLE PASSENGER
(
    PASSENGER_ID    INTEGER               NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FIRST_NAME      CHARACTER VARYING(50) NOT NULL,
    LAST_NAME       CHARACTER VARYING(50) NOT NULL,
    PASSPORT_NUMBER CHARACTER VARYING(20) NOT NULL UNIQUE CHECK (LENGTH(PASSPORT_NUMBER) > 5),
    CITIZENSHIP     CHARACTER VARYING(50) NOT NULL,
    BOOKING_ID      INTEGER               NOT NULL REFERENCES BOOKING (BOOKING_ID)
);

CREATE TABLE EMPLOYEE
(
    EMPLOYEE_ID       INTEGER               NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FIRST_NAME        CHARACTER VARYING(50) NOT NULL,
    LAST_NAME         CHARACTER VARYING(50) NOT NULL,
    OCCUPATION        CHARACTER VARYING(50) NOT NULL CHECK (
        OCCUPATION IN ('Pilot', 'Co-Pilot', 'Cabin Crew', 'Maintenance')
        ),
    FLIGHT_SERVICE_ID INTEGER               NOT NULL REFERENCES FLIGHT_SERVICE (FLIGHT_SERVICE_ID)
);

